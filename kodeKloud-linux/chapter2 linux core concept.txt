=============================================== chapter 2 ============================================

---------------------------------- understanding kernel --------------------------------

-> memory in system divided into
	#1. kernel space
		- unlimited h/w allocation
		- kernel code
		- device drivers

	#2. user space
		- controlled by kernel 
		- user program/application

	- user requests for the hardware access to the kernel via SYSTEM CALLS for various purposes
		- creating/opening(using)/writing a file/variables
		- list processes
		- SYSTEM CALL eg: Process A (vs-code) asks for open() using cat main.go
			- other SC can be for close(), strlen(), closedir() e.t.c.
		  the above will be approved be kernel then finally goes to hardware access


-> $ uname 
	- to check for kernel version 
	- flags: -a and -r
	- linux version is 4.4.0-18362-Microsoft  i.e.  kernel_version.major_version.0-os

-> $ dmesg
	- to print messages generated by the kernel


------------------------------------------- working with hardware ------------------------------------

-> $ lscpu
	- info about CPU arch.
	- CPUs= cpu sockets * cores/socket * treads/core

-> $ lsmem --summary
	- to know about free CPU space

-> $ free -flags
	- to know about memory usage 
	- flags: m for MB, g for GB

-> $ lshw 
	- to get overall machine hardware configuration

-> $ lsblk 
	- to list all the block devices


------------------------------------------------ BOOT processes -------------------------------------

-> processes 
	#1. BIOS POST
	--------------
		- Power On Self Test
		- check for hardware device, weather functioning properly
		- if failed then wont execute further


	#2. Boot Loader (most famous BL - GRUB2)
	------------------------------------------
		- loads and execute code from the boot device which is located in /boot file 
		- hence a screen will appear to choose the os (if multiple os is installed like dual boot)
		- after selecting, kernel get loaded in the memory by Boot Loader and supply it's parameter 
		- finally hand-over control to the kernel


	#3. Kernel Initialization
	--------------------------
		- kernel start decompressing and start executing it's scripts and strats performing it's tasks
	
	
	#4. INIT Process (systemd)
	----------------------------
		- init func then calls the SYSTEMD deamon, which bring the linux host to a usable state
		- start mounting files


--------------------------------------------- Run Levels --------------------------------
 
-> $ runlevel 
	- to check for run level
	- level = 3 is only terminal without any UI (boots into CLI), here display-manager service is disabled
	- level = 5 is with UI (boots into GUI) , enabled

	- systemd sees levels as targets and so for level 5 it runs graphical.target script
	- while for level 3 it runs mutliuser.target others are also there


-> $ systemctl get-default
	- will give running default level target


-> $ systemctl set-default multi-user.target
	- will set target to level 3



------------------------------------------- File types ---------------------------------

-> everything is file in linux, types
	#1. Regular file
	------------------
		- images, scripts, configuartion/data files


	#2. Directory file
	--------------------
		- files containinhg other files/directory
		- eg: home/vaibhav


	#3. Special file (5 types)
	-------------------
		#3.1. Character files
			- files represent devices and allows OS to communicate with I/O devices
			- files representing block devices

		#3.2. Block files
			- representing block devices and can seen by command : $ lsblk
			- placed inside /dev
			- eg: hard disks and RAM

		#3.3. Links
			- way to associate two or more file names sharing the same block of data
				#3.3.1 Hard Links
					- here deleting one link will delete the block of shared data

				#3.3.2 Soft Links
					- acts as pointer, so data wont get deleted on deleting the link
		
		#3.4. Socket file
			- these enables communication between two processes

		#3.5. Named Pipes
			- unidirectional data flow from one file to the another

-> $ ls -lFlag
	- Flag: d for directory, c for character, l for link, s for socket, p for pipe, b for block device 



--------------------------------------------- File System hierarchy ---------------------------------

-> /home 	- home directory for all users except root user (ie. /root)

-> /opt 	- it has all the 3rd party application/programs for any projevt development

-> /mnt 	- mounts security resources , using mount command
		- it is used to mount filesystem temporarily
		- data is stored in /tmp directory

-> /tmp 	- it is used to store temperaory data while mounting

-> /media 	- all external devices are mounted over here like USB
		- $ df -hP
			- used to see all the disk files

-> /dev 	- it contains special blocks and character device files 
		- contains files for devices like External Hard disks, Mouse, Keyboard

-> /bin 	- conatins basic binary and programs like : ls, cp, mv etc.


-> /etc 	- stores configuraton files of the linux

-> /lib 	- has librarys and packages that is to be imported into our programs 

-> /usr 	- has all the application like : mozilla, thunderbird, vim text editor etc.

-> /var 	- has system logs and cached data written by system
		- used to resolve errors		
